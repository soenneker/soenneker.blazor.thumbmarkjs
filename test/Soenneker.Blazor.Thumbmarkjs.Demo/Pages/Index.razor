@page "/"
@using System.Text.Json
@using Microsoft.Extensions.Logging
@using Soenneker.Blazor.Thumbmarkjs.Configuration

@inject ILogger<Index> Logger

<PageTitle>Thumbmark.js Demo</PageTitle>

<Thumbmarkjs @ref="_thumbmarkjs" OnFingerprintGenerated="OnFingerprintGenerated"></Thumbmarkjs>

<div class="container mt-4">
    <h1>Thumbmark.js Demo</h1>
    <p class="lead">A demonstration of browser fingerprinting using Thumbmark.js</p>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Fingerprint</h5>
                </div>
                <div class="card-body">
                    @if (string.IsNullOrEmpty(Fingerprint))
                    {
                        <p class="text-muted">Click the button below to get your fingerprint</p>
                    }
                    else
                    {
                        <div class="mb-3">
                            <label class="form-label">Fingerprint Hash:</label>
                            <div class="input-group">
                                <input type="text" class="form-control" value="@Fingerprint" readonly />
                            </div>
                        </div>
                    }
                    <button class="btn btn-primary" @onclick="GetFingerprint" disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            <span class="ms-2">Loading...</span>
                        }
                        else
                        {
                            <span>Get Fingerprint</span>
                        }
                    </button>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Fingerprint Data</h5>
                </div>
                <div class="card-body">
                    @if (FingerprintData == null)
                    {
                        <p class="text-muted">Click the button below to get detailed fingerprint data</p>
                    }
                    else
                    {
                        <div class="mb-3">
                            <label class="form-label">Raw Data:</label>
                            <pre class="bg-light p-3 rounded"><code>@FingerprintData</code></pre>
                        </div>
                    }
                    <button class="btn btn-primary" @onclick="GetFingerprintData" disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            <span class="ms-2">Loading...</span>
                        }
                        else
                        {
                            <span>Get Detailed Data</span>
                        }
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Options</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Exclude Components:</label>
                                <select class="form-select" @bind="SelectedExcludeComponents" multiple>
                                    <option value="webgl">WebGL</option>
                                    <option value="system.browser.version">Browser Version</option>
                                    <option value="audio">Audio</option>
                                    <option value="canvas">Canvas</option>
                                </select>
                                <div class="form-text">Select components to exclude from fingerprinting</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Timeout (ms):</label>
                                <input type="number" class="form-control" @bind="Timeout" min="100" max="10000" step="100" />
                                <div class="form-text">Component timeout in milliseconds</div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" @bind="Logging" id="loggingCheck" />
                                    <label class="form-check-label" for="loggingCheck">
                                        Enable Logging
                                    </label>
                                </div>
                                <div class="form-text">Enable anonymous 0.01% log sampling</div>
                            </div>
                        </div>
                    </div>
                    <button class="btn btn-primary" @onclick="ApplyOptions" disabled="@IsLoading">
                        Apply Options
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? Fingerprint { get; set; }
    private string? FingerprintData { get; set; }
    private bool IsLoading { get; set; }
    private string[] SelectedExcludeComponents { get; set; } = [];
    private int Timeout { get; set; } = 1000;
    private bool Logging { get; set; } = true;

    private Thumbmarkjs _thumbmarkjs;

    private async Task GetFingerprint()
    {
        try
        {
            IsLoading = true;
            Fingerprint = await _thumbmarkjs.GetFingerprint();
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

    public void OnFingerprintGenerated(string fingerprint)
    {
        Logger.LogInformation("OnFingerprintGenerated: {fingerprint}", fingerprint);
    }

    private async Task GetFingerprintData()
    {
        try
        {
            IsLoading = true;
            JsonElement? data = await _thumbmarkjs.GetFingerprintData();
            FingerprintData = data?.ToString();
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task ApplyOptions()
    {
        try
        {
            IsLoading = true;
            var options = new ThumbmarkjsOptions
            {
                Exclude = SelectedExcludeComponents,
                Timeout = Timeout,
                Logging = Logging
            };

            await _thumbmarkjs.SetOptions(options);
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }
} 